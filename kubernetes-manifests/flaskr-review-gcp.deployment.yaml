apiVersion: v1
kind: Namespace
metadata:
  name: flaskr-review

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: flaskr-review-persistent-volume-claim
  namespace: flaskr-review
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10M

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: flaskr-review-deployment
  namespace: flaskr-review
  labels:
    app: flaskr-review-app-${IMAGE_TAG}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: flaskr-review-app-${IMAGE_TAG}
  template:
    metadata:
      labels:
        app: flaskr-review-app-${IMAGE_TAG}
    spec:
      securityContext:
        fsGroup: 1024
      containers:
        - name: flaskr-review
          image: ${IMAGE_NAME}
          ports:
          - containerPort: 8080
          volumeMounts:
            - mountPath: /home/app/db
              name: db
      initContainers:
        - name: flaskr-init
          image: ${IMAGE_NAME}
          command: ['flask', 'init-db']
          volumeMounts:
            - mountPath: /home/app/db
              name: db
      volumes:
        - name: db
          persistentVolumeClaim:
            claimName: flaskr-review-persistent-volume-claim

---

apiVersion: v1
kind: Service
metadata:
  labels:
    app: flaskr-review-app-${IMAGE_TAG}
  name: flaskr-review-load-balancer-${IMAGE_TAG}
  namespace: flaskr-review
spec:
  selector:
    app: flaskr-review-app-${IMAGE_TAG}
  ports:
  - protocol: TCP
    port: 9090
    targetPort: 8080
  type: LoadBalancer

---

apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  labels:
    app: flaskr-review-app-${IMAGE_TAG}
  name: flaskr-review-virtual-host-${IMAGE_TAG}
  namespace: flaskr-review
spec:
  rules:
  - host: ${IMAGE_TAG}.${APPS_DOMAIN}.xip.io
    http:
      paths:
      - backend:
          serviceName: flaskr-review-load-balancer-${IMAGE_TAG}
          servicePort: 9090